{"version":3,"file":"DocusaurusMarkdownFeature.js","sourceRoot":"","sources":["../src/DocusaurusMarkdownFeature.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport * as path from 'path';\r\nimport { FileSystem } from '@rushstack/node-core-library';\r\nimport { ApiItem } from '@microsoft/api-extractor-model';\r\nimport {\r\n  MarkdownDocumenterFeature,\r\n  IMarkdownDocumenterFeatureOnBeforeWritePageArgs,\r\n  IMarkdownDocumenterFeatureOnFinishedArgs\r\n} from '@microsoft/api-documenter';\r\n\r\ninterface INavigationNode {\r\n  type: string;\r\n  label: string;\r\n  id?: string;\r\n  items?: INavigationNode[];\r\n}\r\n\r\ninterface INavigationFile extends INavigationNode { }\r\n\r\nexport class DocusaurusMarkdownFeature extends MarkdownDocumenterFeature {\r\n  private _apiItemsWithPages: Set<ApiItem> = new Set<ApiItem>();\r\n\r\n  public onInitialized(): void {\r\n    console.log('RushStackFeature: onInitialized()');\r\n  }\r\n\r\n  public onBeforeWritePage(eventArgs: IMarkdownDocumenterFeatureOnBeforeWritePageArgs): void {\r\n    // Add the Docusaurus frontmatter\r\n    const header: string = [\r\n      `---`,\r\n      // Generated API docs have a built-in title header below the breadcrumbs\r\n      `title: ${JSON.stringify(eventArgs.apiItem.displayName)}`,\r\n      // `hide_title: true`,\r\n      // Suppress the default Edit button and Next/Prev links for API docs\r\n      `custom_edit_url: null`,\r\n      `pagination_prev: null`,\r\n      `pagination_next: null`,\r\n      `---`,\r\n      ''\r\n    ].join('\\n');\r\n    eventArgs.pageContent = header + eventArgs.pageContent;\r\n\r\n    // Requires more investigation. HTML comments are ok, but the little empty\r\n    // comments (<!-- -->) that are inserted in between links break the MDX parser\r\n    // in Docusuarus.\r\n    eventArgs.pageContent = eventArgs.pageContent.replace(/<!-- -->/g, ' ');\r\n\r\n    // @ts-ignore\r\n    this._apiItemsWithPages.add(eventArgs.apiItem);\r\n  }\r\n\r\n  public onFinished(eventArgs: IMarkdownDocumenterFeatureOnFinishedArgs): void {\r\n    const navigationFile: INavigationFile = {\r\n      type: 'category',\r\n      label: 'API Reference',\r\n      items: [\r\n        {\r\n          type: 'doc',\r\n          label: '(members)',\r\n          id: 'api/index'\r\n        }\r\n      ]\r\n    };\r\n\r\n    // @ts-ignore\r\n    this._buildNavigation(navigationFile.items!, this.context.apiModel);\r\n\r\n    const navFilePath: string = path.join(this.context.outputFolder, '..', 'api_nav.json');\r\n    const navFileContent: string = JSON.stringify(navigationFile, undefined, 2);\r\n\r\n    FileSystem.writeFile(navFilePath, navFileContent, {\r\n      ensureFolderExists: true\r\n    });\r\n  }\r\n\r\n  private _buildNavigation(parentNodes: INavigationNode[], parentApiItem: ApiItem): void {\r\n    for (const apiItem of parentApiItem.members) {\r\n      if (this._apiItemsWithPages.has(apiItem)) {\r\n        const label = apiItem.displayName;\r\n        const id = path.posix\r\n          // @ts-ignore\r\n          .join('api/', this.context.documenter.getLinkForApiItem(apiItem)!)\r\n          .replace(/\\.md$/, '')\r\n          .replace(/\\/$/, '/index');\r\n        const children: INavigationNode[] = [];\r\n        this._buildNavigation(children, apiItem);\r\n\r\n        if (children.length > 0) {\r\n          const newNode: INavigationNode = {\r\n            type: 'category',\r\n            label,\r\n            items: [\r\n              {\r\n                type: 'doc',\r\n                label: '(members)',\r\n                id\r\n              },\r\n              ...children\r\n            ]\r\n          };\r\n          parentNodes.push(newNode);\r\n        } else {\r\n          const newNode: INavigationNode = {\r\n            type: 'doc',\r\n            label,\r\n            id\r\n          };\r\n          parentNodes.push(newNode);\r\n        }\r\n      } else {\r\n        this._buildNavigation(parentNodes, apiItem);\r\n      }\r\n    }\r\n  }\r\n}\r\n"]}